# @name playerOne
POST {{host}}/auth/local
Content-Type: application/json

{"id": "[game.http] playerOne", "isPremium": false}

###

@playerOneAuth = Cookie: {{playerOne.response.headers.Set-Cookie}}

GET {{host}}/user
{{playerOneAuth}}

###

DELETE {{host}}/auth
{{playerOneAuth}}

###

# @name playerTwo
POST {{host}}/auth/local
Content-Type: application/json

{"id": "[game.http] playerTwo", "isPremium": false}

###
@playerTwoAuth = Cookie: {{playerTwo.response.headers.Set-Cookie}}

GET {{host}}/user
{{playerTwoAuth}}

###
DELETE {{host}}/auth
{{playerTwoAuth}}

###

# @name startOne
POST {{host}}/game/start
{{playerOneAuth}}

###

# @name startTwo
POST {{host}}/game/start
{{playerTwoAuth}}

###

# @name waitingOne
GET {{host}}/game/waiting
{{playerOneAuth}}

###

# @name waitingTwo
GET {{host}}/game/waiting
{{playerTwoAuth}}

###

# @name moveTwo
POST {{host}}/game/move
{{playerOneAuth}}

{
    "from": {"row": 1, "column": 1},
    "to": {"row": 3, "column": 3},
}

# rows begin at 0 at the bottom; columns begin at 0 at the left
# type Coordinate = { row: number; column: number; }
# type RequestBody = {"from": Coordinate, "to": Coordinate}
# RESPONSES
# type State = 'promoted' | 'jumping' | 'done' | 'win' | 'lose'
# 400 if illegal/invalid move
# 200 {"state": State}