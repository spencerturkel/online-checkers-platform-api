Resources:
  sslSecurityGroupIngress: 
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0

files:
  /etc/nginx/conf.d/letsencrypt.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      upstream nodejs {
          server 127.0.0.1:8081;
          keepalive 256;
      }

      server {
          listen 8080;

          if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
              set $year $1;
              set $month $2;
              set $day $3;
              set $hour $4;
          }
          access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
          access_log  /var/log/nginx/access.log  main;

          location /.well-known/ {
              root /var/www/;
          }

          location / {
              proxy_pass  http://nodejs;
              proxy_set_header   Connection "";
              proxy_http_version 1.1;
              proxy_set_header        Host            $host;
              proxy_set_header        X-Real-IP       $remote_addr;
              proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          }

          gzip on;
          gzip_comp_level 4;
          gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
      }

  /etc/nginx/conf.d/proxy.conf.pre:
    mode: "000644"
    owner: root
    group: root
    content: |
      upstream nodejs {
          server 127.0.0.1:8081;
          keepalive 256;
      }

      server {
          listen 443 ssl;
          ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
          ssl_certificate /etc/letsencrypt/live/certdomain/fullchain.pem;
          ssl_certificate_key /etc/letsencrypt/live/certdomain/privkey.pem;
          ssl_prefer_server_ciphers on;
          ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:RSA+AESGCM:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;

          listen 8080;

          if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
              set $year $1;
              set $month $2;
              set $day $3;
              set $hour $4;
          }
          access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
          access_log  /var/log/nginx/access.log  main;

          location /.well-known/ {
              root /var/www/;
          }

          location / {
              proxy_pass  http://nodejs;
              proxy_set_header   Connection "";
              proxy_http_version 1.1;
              proxy_set_header        Host            $host;
              proxy_set_header        X-Real-IP       $remote_addr;
              proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
          }

          gzip on;
          gzip_comp_level 4;
          gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
      }

packages:
  yum:
    epel-release: [] 

container_commands:
  00_remove_config:
    command: rm -f /tmp/deployment/config/#etc#nginx#conf.d#00_elastic_beanstalk_proxy.conf /etc/nginx/conf.d/proxy.conf /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf
  10_install_certbot:
    command: wget https://dl.eff.org/certbot-auto && chmod a+x certbot-auto
  20_reload_nginx:
    command: sudo nginx -s reload
  30_get_cert:
    command: sudo ./certbot-auto certonly --debug --non-interactive --agree-tos --keep-until-expiring --email ${EMAIL} --domains ${CERTDOMAIN} --webroot -w /var/www/
  40_symlink_cert:
    command: sudo ln -s /etc/letsencrypt/live/${CERTDOMAIN}/ /etc/letsencrypt/live/certdomain
  50_switch_to_secure_nginx_conf:
    command: mv /etc/nginx/conf.d/proxy.conf.pre /etc/nginx/conf.d/proxy.conf && rm /etc/nginx/conf.d/letsencrypt.conf && sudo nginx -s reload
